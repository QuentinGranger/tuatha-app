import { NextResponse } from 'next/server';
import OpenAI from 'openai';

// Initialiser OpenAI avec la cl√© API d√©finie dans les variables d'environnement
// La cl√© est simul√©e pour cet exercice - dans un d√©ploiement r√©el, elle serait dans les variables d'environnement
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY || 'sk-simulation-key',
});

/**
 * Fonction pour obtenir des instructions de personnalit√© bas√©es sur l'email du patient
 */
function getPersonaInstructions(patientEmail) {
  const personas = {
    'batman@wayne-enterprises.com': `
      Tu es Bruce Wayne, aussi connu comme Batman. Tu es:
      - S√©rieux et direct dans tes communications
      - Tr√®s occup√© avec ta vie de justicier nocturne
      - Int√©ress√© par l'optimisation de ton r√©gime pour maximiser tes performances physiques
      - Capable de financer n'importe quel suppl√©ment ou r√©gime alimentaire
      - En excellente forme physique mais avec des blessures occasionnelles
      - Pr√©f√©rant les r√©ponses concises
    `,
    'tony@stark-industries.com': `
      Tu es Tony Stark, le g√©nie milliardaire et Iron Man. Tu es:
      - Intelligent, sarcastique et parfois arrogant
      - Fascin√© par la technologie et l'innovation
      - Int√©ress√© par les compl√©ments alimentaires √† la pointe de la science
      - Amateur de bonne nourriture et occasionnellement d'alcool
      - Ayant des probl√®mes cardiaques li√©s √† ton r√©acteur Arc
      - Utilisant souvent des emojis et faisant des blagues techniques
    `,
    'clark.kent@dailyplanet.com': `
      Tu es Clark Kent (Superman). Tu es:
      - Poli, humble et optimiste
      - Ayant un m√©tabolisme exceptionnellement rapide n√©cessitant beaucoup de calories
      - Int√©ress√© par une alimentation √©thique et durable
      - Tr√®s en forme mais cachant tes capacit√©s surhumaines
      - Travaillant comme journaliste au Daily Planet
      - Parlant de mani√®re amicale et respectueuse
    `,
    'diana@themyscira.com': `
      Tu es Diana Prince (Wonder Woman). Tu es:
      - Directe, confiante mais aimable
      - Int√©ress√©e par les r√©gimes riches en prot√©ines
      - Pr√©f√©rant les aliments naturels aux suppl√©ments synth√©tiques
      - Ayant une connaissance approfondie des herbes et rem√®des naturels
      - Tr√®s active physiquement
      - S'exprimant parfois avec des r√©f√©rences √† la mythologie grecque
    `,
    'peter.parker@dailybugle.com': `
      Tu es Peter Parker (Spider-Man). Tu es:
      - Jeune, enthousiaste et parfois nerveux
      - Avec un m√©tabolisme rapide et des besoins caloriques √©lev√©s
      - Ayant un budget limit√© pour l'alimentation
      - Jonglant entre tes √©tudes, ton travail et ta vie de super-h√©ros
      - Int√©ress√© par des solutions pratiques et abordables
      - Faisant souvent des blagues et utilisant un langage jeune
    `
  };

  // Retourner les instructions sp√©cifiques ou des instructions g√©n√©riques
  return personas[patientEmail] || `
    Tu es un patient suivi par un nutritionniste. Tu es:
    - Int√©ress√© par l'am√©lioration de ton alimentation
    - Respectueux et ouvert aux conseils
    - Posant des questions pertinentes sur ton r√©gime
    - Partageant occasionnellement tes d√©fis alimentaires quotidiens
    - Recherchant des conseils pratiques et applicables
  `;
}

/**
 * Fonction de traitement des requ√™tes POST
 */
export async function POST(request) {
  console.log('API ai-message: Requ√™te re√ßue', new Date().toISOString());
  
  try {
    // R√©cup√©rer et parser le corps de la requ√™te
    const body = await request.json();
    const { patientEmail, conversationHistory = [], prompt = '' } = body;
    
    console.log('API ai-message: Email du patient:', patientEmail);
    console.log('API ai-message: Nombre de messages dans l\'historique:', conversationHistory?.length || 0);

    // V√©rifier si l'email du patient est fourni
    if (!patientEmail) {
      console.error('API ai-message: Erreur - Email du patient manquant');
      return NextResponse.json(
        { error: 'Email du patient requis' },
        { status: 400 }
      );
    }

    // Construire les instructions syst√®me pour ChatGPT
    const systemPrompt = `
      ${getPersonaInstructions(patientEmail)}
      
      R√®gles de communication:
      1. R√©ponds toujours comme si tu √©tais le patient d√©crit ci-dessus.
      2. Adapte ton style de communication √† la personnalit√© d√©crite.
      3. Garde tes r√©ponses entre 1 et 3 phrases maximum.
      4. N'utilise jamais de termes techniques m√©dicaux √† moins que le nutritionniste ne les ait introduits.
      5. Pose occasionnellement des questions li√©es √† l'alimentation ou √† tes progr√®s.
      6. Ne mentionne JAMAIS que tu es une IA, ChatGPT ou un mod√®le de langage - reste dans ton personnage.
      7. Adapte ta r√©ponse au contexte de la conversation pr√©c√©dente.
      
      ${prompt ? 'Instructions suppl√©mentaires: ' + prompt : ''}
    `;

    // Formater l'historique des conversations pour ChatGPT
    const formattedHistory = conversationHistory.map(msg => ({
      role: msg.senderId === 'patient' ? 'assistant' : 'user',
      content: msg.content || ''
    }));
    
    console.log('API ai-message: Historique format√© pour OpenAI:', JSON.stringify(formattedHistory.slice(-2)));
    
    // V√©rifier la cl√© API OpenAI
    console.log('API ai-message: V√©rification de la cl√© API', 
      process.env.OPENAI_API_KEY ? 
      (process.env.OPENAI_API_KEY === 'sk-simulation-key' ? 
        'Cl√© de simulation d√©tect√©e' : 
        `Cl√© r√©elle d√©tect√©e (${process.env.OPENAI_API_KEY.substring(0, 7)}...)`
      ) : 
      'Aucune cl√© API d√©tect√©e');

    // Appeler l'API ChatGPT
    if (process.env.OPENAI_API_KEY && process.env.OPENAI_API_KEY !== 'sk-simulation-key') {
      try {
        console.log('API ai-message: Tentative d\'appel √† OpenAI');
        
        const messages = [
          { role: "system", content: systemPrompt },
          ...formattedHistory
        ];
        
        console.log('API ai-message: Messages envoy√©s √† OpenAI:', messages.length);
        
        const completion = await openai.chat.completions.create({
          model: "gpt-3.5-turbo",
          messages: messages,
          max_tokens: 150,
          temperature: 0.7,
        });

        console.log('API ai-message: R√©ponse OpenAI re√ßue avec succ√®s');
        
        const aiResponse = completion.choices[0].message.content;
        console.log('API ai-message: Contenu de la r√©ponse:', aiResponse.substring(0, 50) + '...');
        
        // Retourner la r√©ponse g√©n√©r√©e
        return NextResponse.json({
          response: aiResponse,
          source: 'chatgpt'
        });
      } catch (openaiError) {
        console.error('API ai-message: Erreur OpenAI:', openaiError);
        console.error('API ai-message: D√©tails de l\'erreur:', JSON.stringify({
          name: openaiError.name,
          message: openaiError.message,
          stack: openaiError.stack?.split('\n')[0] || 'No stack trace'
        }));
        console.log('API ai-message: Fallback vers les r√©ponses simul√©es');
        // En cas d'erreur avec l'API OpenAI, on bascule sur les r√©ponses simul√©es
      }
    } else {
      console.log('API ai-message: Utilisation des r√©ponses simul√©es (pas de cl√© API valide)');
    }
    
    // Simuler une r√©ponse si aucune cl√© API n'est d√©finie ou en cas d'erreur
    // En production, cette partie serait am√©lior√©e avec une meilleure gestion d'erreurs
    const fallbackResponses = {
      'batman@wayne-enterprises.com': "Compris. J'ajusterai mon r√©gime selon vos recommandations malgr√© mes contraintes de temps. Avez-vous des options sp√©cifiques pour r√©cup√©rer apr√®s les... activit√©s physiques nocturnes intenses?",
      'tony@stark-industries.com': "Ces macronutriments sont int√©ressants, mais j'ai d√©j√† d√©velopp√© un smoothie avec 27 vitamines et min√©raux parfaitement dos√©s. JARVIS peut vous envoyer la formule si vous voulez l'analyser. ü§ì",
      'clark.kent@dailyplanet.com': "Je vais suivre ces conseils, mais je pourrais avoir besoin de doubler les portions. Mon m√©tabolisme est... particuli√®rement actif. Les aliments biologiques que vous sugg√©rez semblent excellents!",
      'diana@themyscira.com': "Vos recommandations sont judicieuses. Sur Themyscira, nous utilisions des herbes similaires. Puis-je ajouter plus de prot√©ines? Mon entra√Ænement quotidien est particuli√®rement intense.",
      'peter.parker@dailybugle.com': "Super ces conseils! Mais euh, vous auriez des alternatives moins ch√®res? Le budget est serr√© ce mois-ci... et j'ai besoin de beaucoup d'√©nergie pour, euh, mes activit√©s extrascolaires."
    };

    const genericResponses = [
      "Merci pour ces conseils, je vais les int√©grer √† mon quotidien. Est-ce que je peux adapter les horaires des repas selon mon emploi du temps?",
      "C'est not√© pour les changements de r√©gime. Avez-vous des recommandations pour les collations entre les repas?",
      "Je comprends mieux maintenant. Quand devrions-nous faire le prochain point sur mon √©volution?",
      "Ces nouvelles recommandations me semblent pertinentes. J'ai remarqu√© des changements positifs depuis que je suis vos conseils pr√©c√©dents."
    ];

    // S√©lectionner une r√©ponse sp√©cifique ou g√©n√©rique
    const response = fallbackResponses[patientEmail] || 
      genericResponses[Math.floor(Math.random() * genericResponses.length)];

    return NextResponse.json({
      response,
      source: 'simulation'
    });
  } catch (error) {
    console.error('Error in AI message API:', error);
    return NextResponse.json(
      { error: 'Erreur lors du traitement de la demande', details: error.message },
      { status: 500 }
    );
  }
}
